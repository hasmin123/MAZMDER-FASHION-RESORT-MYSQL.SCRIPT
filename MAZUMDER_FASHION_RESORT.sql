CREATE SCHEMA MAZUMDER_FASHION_RESORT
USE MAZUMDER_FASHION_RESORT;
  #DDL COMMAND (DATA DEFINITION COMMAND)          
            $---CREATE---
-------1.DEPARTMENTS_TABLE--------
CREATE TABLE DEPARTMENTS_TABLE(
    DEPT_ID VARCHAR(10) NOT NULL UNIQUE ,
    DEPARTMENT VARCHAR(50)
    );
   
--------EMPLOYEES_TABLE--------- 
CREATE TABLE EMPLOYEES_TABLE(
     S_NO INT  UNIQUE NOT NULL  AUTO_INCREMENT,
     EMP_ID VARCHAR(100) NOT NULL,
     NAME VARCHAR(100),
     GENDER ENUM("M","F","O"),
	 DOB DATE,
     AGE INT ,
     CONTACT INT,
     ADDRESS CHAR(100),
     EMAIL_ID VARCHAR(50),
     JOB_POST VARCHAR(50),
     DEPT_ID VARCHAR(10),
     SALARY float,
     STATUS BOOL,
     PRIMARY KEY (EMP_ID),     
     FOREIGN KEY (DEPT_ID)
REFERENCES DEPARTMENTS_TABLE (DEPT_ID),
     CONSTRAINT CHK_EMPLOYEES CHECK
     (AGE>=18 AND SALARY>=10000)
     );
     
     ----------------TRIGGERS-----------------
# BEFORE INSERT TRIGGER

DELIMITER //
CREATE TRIGGER AGE_VERIFY
BEFORE INSERT ON EMPLOYEES_TABLE
FOR EACH ROW
IF NEW.AGE<20 THEN SET NEW.AGE =20;
END IF;//

#  AFTER INSERT TRIGGER

CREATE TABLE MESSAGE_TABLE(
EMP_ID VARCHAR(100) NOT NULL UNIQUE,
MESSAGE VARCHAR(100)
);

DELIMITER //
CREATE TRIGGER 
CHECK_NULL_DOB
AFTER INSERT
ON EMPLOYEES_TABLE
FOR EACH ROW
BEGIN
IF NEW.DOB IS NULL THEN
INSERT INTO MESSAGE_TABLE (EMP_ID ,MESSAGE)
VALUES (NEW.EMP_ID,CONCAT('Hi',' ',NEW.NAME,' ','Please update your date of birth'));
end if;
end //
DELIMITER ;

# BEFORE UPDATE TRIGGER

DELIMITER //
CREATE TRIGGER SALARY_UPDATE
BEFORE UPDATE
ON EMPLOYEES_TABLE
FOR EACH ROW
BEGIN
IF NEW.SALARY>100000 THEN
SET NEW.SALARY=200000;
ELSEIF NEW.SALARY<100000 THEN
SET NEW.SALARY = 60000;
END IF;
END  //
DELIMITER ;

# AFTER UPDATE TRIGGERS

CREATE TABLE LOG (
USER VARCHAR(50),
STATUS TEXT
);

CREATE TRIGGER LOG_UPDATE
AFTER UPDATE
ON EMPLOYEES_TABLE
FOR EACH ROW
INSERT INTO LOG 
VALUES(current_user() ,CONCAT('Updated by',' ',old.name,' ',now()));

* IF THERE IS AN SINGLE STATEMENT WE DONT HAVE TO ADD DELIMITER,BEGIN AND END.

# BEFORE DELETE TRIGGER

CREATE TABLE SALARY_TABLE(
EMP_ID VARCHAR(100) NOT NULL UNIQUE,
SALARY FLOAT NOT NULL,
DELETE_DATE TIMESTAMP DEFAULT NOW()
);
    
DELIMITER $$      
CREATE TRIGGER SALARY_DELETE
BEFORE DELETE
ON EMPLOYEES_TABLE
FOR EACH ROW
BEGIN
INSERT INTO SALARY_TABLE (EMP_ID,SALARY)
VALUES(OLD.EMP_ID,OLD.SALARY);
END $$
DELIMITER ;

# AFTER DELETE TABLE

CREATE TABLE BACKUP_TABLE(
 NAME VARCHAR(100) NULL UNIQUE ,
COMMENTS VARCHAR(100)
);

DELIMITER //
CREATE TRIGGER BACKUP_TRIGGER
AFTER DELETE
ON EMPLOYEES_TABLE
FOR EACH ROW
BEGIN
INSERT INTO BACKUP_TABLE VALUES(OLD.NAME,CONCAT('Deleted',' ',old.name,' ',now()));
END //

			----$ ALTER---------
# ADD COLUMN           
ALTER TABLE EMPLOYEES_TABLE
ADD COLUMN VALID_DATE DATE  ;

# RENAME COLUMN
ALTER TABLE EMPLOYEES_TABLE      
RENAME COLUMN VALID_DATE TO JOINING_DATE;

# MODIFY DATATYPE
ALTER TABLE EMPLOYEES_TABLE
MODIFY COLUMN JOINING_DATE TIMESTAMP DEFAULT NOW() ;

# MODIFY DATA
ALTER TABLE EMPLOYEES_TABLE
MODIFY COLUMN EMP_ID VARCHAR(50);

# ADD CONSTRAINTS
ALTER TABLE DEPARTMENTS_TABLE
ADD CONSTRAINT PRIMARY KEY (DEPT_ID);

ALTER TABLE EMPLOYEES_TABLE
ALTER SALARY SET DEFAULT (15000);

# DROP CONSTRAINT
ALTER TABLE DEPARTMENTS_TABLE
DROP PRIMARY KEY ; 

ALTER TABLE EMPLOYEES_TABLE
ALTER SALARY DROP DEFAULT;

# DROP COLUMN
ALTER TABLE EMPLOYEES_TABLE
DROP COLUMN JOINING_DATE;

-------DROP_COMMAND---------
DROP TABLE DEPARTMENTS_TABLE;
DROP TABLE EMPLOYEES_TABLE;
DROP TABLE MESSAGE_TABLE;
DROP TABLE LOG;
DROP TABLE SALARY_TABLE;
DROP TABLE BACKUP_TABLE;

---------TRUNCATE_COMMAND---------
TRUNCATE TABLE EMPLOYEES_TABLE ;

TRUNCATE TABLE DEPARTMENTS_TABLE;

---------RENAME_COMMAND-------
RENAME TABLE LOG_TABLE TO LOG ;
       --------OR-------------
ALTER TABLE LOG RENAME TO LOG_TABLE;

DML COMMAND (DATA_MANIPUATION_LANGUAGE)

SELECT_COMMAND
----- SELECT ALL THE FIELD IN A TABLE ------
SELECT*FROM DEPARTMENTS_TABLE ;

SELECT*FROM EMPLOYEES_TABLE ;

----- SELECT SPECIFIC COLUMN ----
SELECT DEPT_ID FROM DEPARTMENTS_TABLE ;

SELECT EMP_ID FROM EMPLOYEES_TABLE ;

  -------- INSERTS-------
 
 #  DEPARTMENT_TABLE
 
 INSERT INTO DEPARTMENTS_TABLE
 VALUES
("0010A","TEXTILE"),("0020B","FOOTWEAR"),("0030C","COSMETICS"),("0040D","JEWELLARY"),("0050E","PARLOUR"),("0060F","TAILOR"),("0070G","GIFTS & MISCELLANEOUS ACCESSORIES");

 
 # EMPLOYEES TABLE
INSERT INTO EMPLOYEES_TABLE
(S_NO,EMP_ID,NAME,GENDER,DOB,AGE,CONTACT,ADDRESS,EMAIL_ID,JOB_POST,DEPT_ID,SALARY,STATUS)
VALUES
("1","00101A ","ASHISH MEHTA","M","1980-04-08","40","943537140","NOIDA","MEHTA@GMAIL.COM","MANAGER","0010A","120000","1"),
("2","00201B","RITURAJ SHARMA","M","1982-09-23","42","600218041","KANPUR","RITURAJ@YAHOO.IN","MNAGER","0020B","100000","1"), 
("3","00301C","MITHEL SONI","M","1980-02-04","44","970746532","MANGALORE","SONI@EMAIL.COM","MANAGER","0030C","100000","1"),
("4","00401D","GRECIA CUMMINS","F","1986-05-04","40","888004329","AUSTRALIA","GRECI@GMAIL.COM","MANAGER","0040D","140000","1"),
("5","00501E","MICHEAL GEORGE","M","1980-12-20","44","98765432","ENGLAND","MICEAL@YAHOO.COM","MANAGER","0050E","120000","1"),
("6","00601F","GARGI KHAN","F","1884-05-22","40","769954367","MUMBAI","KHAN@GMAIL.COM","MANAGER","0060F","100000","1"),
("7","00701G","PAYAL RAWAT","F","1980-08-14","40","009124739","RANCHI","RAWAT@YAHOO.COM","MANAGER","0070G","160000","1"),
("8","00102A","SIMONA KHANIJOW","F","1988-09-15","32","502744313","DELHI NCR","KHANIJOW@HOTMAIL.IN","SPERVISOR","0010A","40000","1"),
("9","00202B","RIZWAN AHMED","M","1986-07-24","34","776012934","KASMIR","RIZWAN@GMAIL.COM","SUPERVISOR","0020B","40000","1"),
("10","00302C","TAPSI KARNAR","F","1984-10-23","36","202437885","WEST BENGAL","KARNAR@EMAIL.IN","SPERVISOR","0030C","42000","0"),
("11","00402D","SWARNA NANDI","F","1988-12-31","32","110004310","PUNE","NANDI@GMAIL.COM","SPERVISOR","0040D","30000","1"),
("12","00502E","VIRENDER SINGH","M","1985-12-20","35","999900066","PUNAB JALANDHAR","VIRENDER@EMAIL.COM","SUPERVISOR","0050E","30000","0"),
("13","00602F","RISHI ARJUN","M",NULL,NULL,"608875438","CHENNAI","ARJUN@YAHOO.COM","SUPERVISER","0060F","32000","1"),
("14","00702G","RONKA DAS","F","1989-11-13","34","098765432","ASSAM SILCHAR","RONIKA@GMAIL.COM","SUPERVISOR","0070G","35000","0"),
("15","00103A","NAZIL KHAN","O","1989-10-08","34","008675433","UTTAR PRADESH","NAZIL@EMAIL.COM","CLERK","0010A","30000","1"),
("16","00203B","PYALI GHOSH","F",NULL,NULL,"986745321","KOLKATA","PYALI@GMAIL.COM","CLERK","0020B","32000","0"),
("17","00303C","RAKESH VERMA","M","1989-10-06","34","553765421","INDORE","VERMA@EMAIL.COM","CLERK","0030C","35000","1"),
("18","00403D","PAPIYA CHOUDHRY","F","1880-08-15","43","775310965","GOA","PAPIYA@YAHOO.COM","CLERK","0040D","40000","1"),
("19","00503E","DIMPLE KHANNA","F","1888-12-21","32","668734210","PATNA","KHANNA@GMAIL.COM","CLERK","0050E","35000","1"),
("20","00603F","MAYA AGGARWAL","F","1896-03-20","36","065317854","HARYANA","AGGARWAL@HOTMAL.COM","CLERK","0060F","32000","1"),
("21","00703G","RAVI GAUTUM","M","1990-05-22","34","764321879","BOPAL","RAVI@GMAIL.COM","CLERK","0070G","34000","1"),
("22","00104A","NISHAN GHOSH","M","1999-11-23","42","874532186","NAVI MUMBAI","NISHAN@GMAIL.COM","ACCOUNTANT","0010A","30000","1"),
("23","00204B","DENYAL DISUJA","M","1989-07-13","34","743278537","KERALA KOCHI","DENIYAL@GMAIL.COM","ACCOUNTANT","0020B","31000","1"),
("24","00304C","AMRIT PAUL","M","1982_05_04",52,"864784765","KOLKATA","PAUL@GMAIL.COM","ACCOUNTANT","0030C","36000","0"),
("25","00404D","SONAM SINGH","F","2000-06-23","21","734606432","PATIALA ","SONIA@GMAIL.COM","ACCOUNTANT","0040D","14000","0"),
("26","00504E","VHIR CHAHAL","M","1989-12-15","34","573321879","UTTARKASHI","VHIR@GMAIL.COM","ACCOUNTANT","0050E","39000","1"),
("27","00604F","GIRRAJ SINGH","M","1987-02-13","35","764373685","AMRITSAR","GIRRAJ@GMAIL.COM","ACCOUNTANT","0060F","37000","1"),
("28","00704G","MANISH JAISWAL","M","1986-12-13","36","767643789","BENGALURU","MANISH@GMAIL.COM","ACCOUNTAT","0070G","35000","1"),
("29","00105A","MIR KHAN","M","1990-12-14 ","32 ","859321879","BANGLADESH","MIR@EMAIL.COM","SALESMAN","0010A","30000","1"),
("30","00106A","NIRAJ RAJ","M","1999-08-13","23","764321410","INDOR MP","RAJ@GMAIL.COM","SALESMAN","0010A","39000","1"),
("31","00107A","JESMI RMAN","F","1991-04-03","33","860321879","KOCHI","JESMI@GMAIL.COM","SALESMAN","0010A","31000","0"),
("32","00108B","PUJA PANDEY","F","1998-11-09","34","850431879","AMBALA","PANDEY@EMAIL.COM","SALESMAN","0010A","38000","1"),
("33","00205B","VUPENDER SINGH","M","1992-10-16","34","896321879","JALANDHAR","VUPENDER@EMAIL.COM","SALESMAN","0020B","32000","1"),
("34","00206B","KISMAT BEGUM","F","2005-08-24","18","975326976","AJMIR","BEGM@YAHOO.COM","SALESMAN","0020B","33000","1"),
("35","00207B","YUVI RAMAN","M","1988-05-27","35","768648643","CHENNAI","YUVI@GMAIL.COM","SALESMAN","0020B","34000","1"),
("36","00208B","SAMAIRA RANI","F","1989-04-18","34","965321879","GUJRAT","SAMAIRA@EMAIL.COM","SALESMAN","0020B","36000","1"),
("37","00305C","PINKY DUBEY","F","2004-08-10","19","086532879","HARYANA","PINKY@GMAIL.COM","SALESMAN","0030C","27000","0"),
("38","00306C","JASMIN KHAN","F","1992-06-15","31","864325579","HYDRABAB","JASMIN@GMAIL.COM","SALESMAN","0030C","20000","1"),
("39","00307C","MANIHA REHMAN","F","2000-09-17","22","764986579","UTTAR PRADESH","RAJPUT@GMAIL.COM","SALESMAN","0030C","15000","0"),
("40","00308C","NICOLA GEORGE","M","1980-08-23","42","975432179","AUSTRALLIA","GEORGE@GMAIL.COM","SALESMAN","0030C","44000","0"),
("41","00405D","SANIA SINGH","F","1987-07-19","36","975432187","SANIA","SANIA@EMAIL.COM","SALESMAN","0040D","34000","1"),
("42","00406D","IRFAN KHAN","M","1988-08-20","35","975332189","MUMBAI","IRFAN@GMAIL.COM","SALESMAN","0040D","34000","1"),
("43","00407D","SANJAY SHARMA","M","1989-09-21","34","064321879","UTTAR PRADESH","SANAY@GMAIL.COM","SALESMAN","0040D","39000","1"),
("44","00408D","THIRTHI RAWAT","F","1990-10-22","33","075321879","CHATTISGARH","THIRTHI@YAHOO.COM","SALESMAN","0040D","24000","1"),
("45","00505E","TARA RAWAT","M","1991-11-23","32","045621879","CHATTISGARH","TARA@YAHOO.COM","CLERK","0050E","34000","0"),
("46","00506E","YANIZ RUAF","F","1992-12-24","31","076521879","SRILANKA","YANIZ@GMAIL.COM","CLERK","0050E","38000","1"),
("47","00507E","AKASH DEBNATH","M","1993-01-25","30","067321879","ASSAM","AKASH@GMAIL.COM","CLERK","0050E","31000","0"),
("48","00508E","PIKI PAUL","M","1994-02-26","29","07861879","WEST BENGAL","PIKI@GMAIL.COM","CLERK","0050E","34000","1"),
("49","00605F","ANTONY JONAS","M","1995-03-27","28","086321879","ENGLAND","ANTONY@GMAIL.COM","FASHION DESIGNER","0060F","31000","0"),
("50","00606F","BERKLEY","M","1996-04-28","27","076521879","RAJASTHAN","BERKLEY@EMAIL.COM","FASHION DESIGNER","0060F","32000","0"),
("51","00607F","JENIFAR THOMAS","F","1997-05-29","26","764320869","NORTH AMARICA","THOMAS@GMAIL.COM","FASHION DESIGNER","0060F","33000","1"),
("52","00608F","WILLIAM MAXWELL","F","1998-06-30","25","764086487","ENGLAND","MAXWELL@EMAIL.COM","FASHION DEGINER","0060F","34000","1"),
("53","00705G","AKANSHA GAUTUM","F","1999-07-31","24","098321879","PUNJAB","AKANSHA@YAHOO.COM","BEAUTICIAN","0070G","35000","0"),
("54","00706G","MARK DISUJA","F","2000-08-01","23","067821879","NORTH HAMILTON","MARK@GMAIL.COM","BEAUTICIAN","0070G","36000","0"),
("55","00707G","VINITA PRKESH","M","2000-09-02","23","564321879","TELANGANA","VINITA@EMAIL.COM","BEAUTICIAN","0070G","33000","1"),
("56","00708G","NAZ AHMED","F","1999-10-03","24","608671879","LAHORE","NAZ@GMAIL.COM","BEAUTICIAN","0070G","30000","1"),
("57","00109A","NISHA NAG","F","1998-11-04","25","764078879","MIBANG","NISHA@GMAIL.COM","ANALYST","0010A","34000","1"),
("58","00209B","RAHUL SHARMA","M","1997-12-05","26","066321879","RAMNGAR","RAHUL@GMAIL.COM","ANALYST","0020B","34000","1"),
("59","00309C","RAMAN BAROI","M","1996-01-06","27","764397564","RAJASTHAN","BAROI@GMAIL.COM","ANALYST","0030C","34000","1"),
("60","00409D","RAMAN BAROI","M","1996-01-06","27","764397564","RAJASTHAN","BAROI@GMAIL.COM","ANAYST","0040D","34000","0"),
("61","00509E","MUSKAN CHANDRA","F","1994-03-08","29","764967579","KOLKATA","MUSKAN@GMAIL.COM","ANALYST","0050E","34000","1"),
("63","00609F","ANNI CHIRSTINA","F","1993-04-09","30","764329564","NEWYORK","ANNI@GMAIL.COM","ANALYST","0060F","34000","0"),
("64","00709G","VINIT CHANDRA","M","1992-05-10","31","643219675","NANITHAL","VINIT@GMAIL.COM","ANALYST","0070G","34000","1");

----- UPDATE COMMAND------

# BEFORE UPDATE TRIGGER  
UPDATE EMPLOYEES_TABLE
SET SALARY =80000 WHERE SALARY <100000;

# AFTER UPDATE TRIGGER
UPDATE EMPLOYEES_TABLE
SET SALARY = 120000 WHERE S_NO = 1;

----- DELETE COMMAND------

# BEFORE DELETE TRIGGER
DELETE FROM EMPLOYEES_TABLE
WHERE S_NO = 63;


-------- SQL OPERATORS ----------
# ARITHMETIC OPERATORS
    _ADD(+) : SELECT 30+20
SUBTRACT(-) : SELECT 30-20
MULTIPLY(*) : SELECT 30*20
  DEVIDE(/) : SELECT 30/20;
  MODULO(%) : SELECT 30 %5;
  
  # COMPARISON OPERATORS
  EQUAL_TO (=)                : SELECT*FROM EMPLOYEES_TABLE WHERE SALARY = 50000;
  GREATER_THAN(>)             : SELECT*FROM EMPLOYEES_TABLE WHERE SALARY> 50000;
  LESS_THAN(<)                : SELECT*FROM EMPLOYEES_TABLE WHERE SALARY<50000;
  GREATER_THAN_OR_EQUAL_TO(>=): SELECT*FROM EMPLOYEES_TABLE WHERE SALARY>=50000;
  LESS_THAN_OR_EQUAL_TO(<=)   : SELECT*FROM EMPLOYEES_TABLE WHERE SALARY<=50000;
  NOT_EQUAL_TO(<> OR !=)      : SELECT*FROM EMPLOYEES_TABLE WHERE SALARY!=50000;
  
  # LOGICAL OPERATORS
  AND_OPERATOR :
  SELECT*FROM EMPLOYEES_TABLE WHERE SALARY>50000 AND DEPT_ID = "0010A";
  
  OR_OPERATOR
  SELECT*FROM EMPLOYEES_TABLE WHERE SALARY>50000 OR DEPT_ID = "0010A";
  
  NOT_OPERATOR
  SELECT*FROM EMPLOYEES_TABLE WHERE SALARY NOT LIKE DEPT_ID = "0020B";
  
  # SPECIAL OPERATORS
  BETWEEN_OPERATOR:
  SELECT*FROM EMPLOYEES_TABLE WHERE SALARY BETWEEN 15000 AND 30000;
  
  LIKE_OPERATOR:
  SELECT*FROM EMPLOYEES_TABLE WHERE SALARY LIKE 24000;
  
  IS_NULL_OPERATOR
  SELECT EMP_ID,NAME  FROM EMPLOYEES_TABLE WHERE DOB IS NULL;
  
  IN_OPERATOR
  SELECT*FROM EMPLOYEES_TABLE WHERE STATUS IN (0);
  
  ALL_OPERATOR
  SELECT*FROM EMPLOYEES_TABLE WHERE SALARY>ALL(SELECT SALARY FROM EMPLOYEES_TABLE WHERE JOB_POST="CLERK");
  
  ANY_/SOME_OPERATOR
  SELECT*FROM EMPLOYEES_TABLE WHERE SALARY>ANY(SELECT SALARY FROM EMPLOYEES_TABLE WHERE JOB_POST="CLERK");
  
  EXIST_OPERATOR
  SELECT DEPARTMENT FROM DEPARTMENTS_TABLE WHERE EXISTS(SELECT NAME FROM EMPLOYEES_TABLE 
  WHERE EMPLOYEES_TABLE.DEPT_ID=DEPARTMENTS_TABLE.DEPT_ID AND SALARY<50000);
  
  ----- SQL_FUNCTION---
  -- AGGREGATE_FUNCTION/MULTI_ROW_FUNCTION/GROUP_FUUNCTION--
  
  COUNT()   :   SELECT COUNT(*)FROM EMPLOYEES_TABLE WHERE DEPT_ID="0030C";
  AVERAGE() :   SELECT AVG(SALARY)FROM EMPLOYEES_TABLE WHERE DEPT_ID="0030C";
  SUM()     :   SELECT SUM(SALARY)FROM EMPLOYEES_TABLE WHERE DEPT_ID="0030C";
  MIN()     :   SELECT MIN(SALARY)FROM EMPLOYEES_TABLE WHERE DEPT_ID="0030C";
  MAX()     :   SELECT MAX(SALARY)FROM EMPLOYEES_TABLE WHERE DEPT_ID="0030C";
  STD.DEV() :   SELECT STDDEV(SALARY)FROM EMPLOYEES_TABLE WHERE DEPT_ID="0030C";
  VARIANCE():   SELECT VARIANCE(SALARY)FROM EMPLOYEES_TABLE WHERE DEPT_ID="0030C";
  
  #STRING FUNCTION
  $ CASE_MANIPULATION_FUNTION:
  UPPER:SELECT UPPER("Amisha Patel");
  LOWER:SELECT LOWER("AMISHA PATEL");
  
  
  $ STRING_MANIPULATION_FUNCTION:
  CONCAT:SELECT CONCAT("AMISHA", "PATEL");
  LENGTH:SELECT LENGTH(NAME)FROM EMPLOYEES_TABLE;
  SUB_STRING:SELECT SUBSTRING("AMISHA PATEL",1,6);
  INSTRING:SELECT INSTR("AMISHA PATEL","A");
  TRIM:SELECT TRIM("A"FROM"AMISHA");
  LTRIM:SELECT LTRIM('    AMISHA');
  RTRIM:SELECT RTRIM("AMISHA  ");
  LPAD:SELECT LPAD("AMISHA",10,"_");
  RPAD:SELECT RPAD("AMISHA",10,"_");
  REPALCE:SELECT REPLACE("AMISHA","SHA","789");
  REVERSE:SELECT REVERSE("AMISHA");
  
  $ NUMERIC_FUNCTION
  MOD:SELECT MOD(18,4);
  ROUND:SELECT ROUND(135.375,2);
  TRUNCATE:SELECT TRUNCATE(135.375,2);
  
  $DATE_FUNCTION
  SYSDATE     : SELECT SYSDATE();
  CURRENT_DATE: SELECT CURRENT_DATE;
  DAY_NAME    : SELECT DAYNAME(CURRENT_DATE);
  DAY_OF_MONTH: SELECT DAYOFMONTH(CURRENT_DATE);
  ADD_MONTH   : SELECT TIMESTAMPADD(MONTH,1,SYSDATE());
  LAST_DATE   : SELECT LAST_DAY(CURRENT_DATE);
  DATE_ADD    : SELECT DATE_ADD("2023-12-06",INTERVAL 25 DAY);
  
 -- SQL_CLAUSE--
  #GROUP BY CLAUSE:
  SELECT MAX(SALARY) FROM EMPLOYEES_TABLE GROUP BY DEPT_ID;
  
  # HAVING CLAUSE:
  SELECT MIN(SALARY) FROM EMPLOYEES_TABLE GROUP BY DEPT_ID HAVING DEPT_ID="0040D";
  
  # ORDER BY CLAUSE
  ASCENDING_ORDER:
  SELECT EMP_ID,NAME,DEPT_ID,SALARY
  FROM EMPLOYEES_TABLE
  ORDER BY SALARY
  ASC;
  
  DESCENDING_ORDER:
  SELECT EMP_ID,NAME,DEPT_ID,SALARY
  FROM EMPLOYEES_TABLE
  ORDER BY SALARY
  DESC;
  
  # LIMIT CLAUSE
  SELECT*FROM EMPLOYEES_TABLE LIMIT 10;
  
  ----- ALIAS ----
  SELECT*FROM EMPLOYEES_TABLE AS EMP_TB;
  SELECT*FROM DEPARTMENTS_TABLE AS DEPT_TB;
  
  ----- DESCRIBE TABLE ------
   EMPLOYEES_TABLE : DESC TABLE EMPLOYEES_TABLE;
  DEPARTMENTS_TABLE: DESC TABLE DEPARTMENTS_TABLE;
  
  ----- SQL UNIONS----
  # UNION
  SELECT DEPT_ID FROM EMPLOYEES_TABLE
  UNION
  SELECT DEPT_ID FROM DEPARTMENTS_TABLE
  ORDER BY DEPT_ID;
  
  # UNION ALL
  SELECT DEPT_ID FROM EMPLOYEES_TABLE
  UNION ALL
  SELECT DEPT_ID FROM DEPARTMENTS_TABLE
  ORDER BY DEPT_ID;
  
  -- SQL JOIN --
  INNER_JOIN:
  SELECT EMP_ID,NAME
  FROM EMPLOYEES_TABLE  
  INNER JOIN DEPARTMENTS_TABLE 
  ON EMPLOYEES_TABLE.DEPT_ID=DEPARTMENTS_TABLE.DEPT_ID;
  
  LEFT_JOIN(LEFT_OUTER_JOIN):
  SELECT *
  FROM EMPLOYEES_TABLE
  LEFT JOIN DEPARTMENTS_TABLE ON
  EMPLOYEES_TABLE.DEPT_ID=             
  DEPARTMENTS_TABLE.DEPT_ID;
  
  RIGHT_JOIN(RIGHT_OUTER_JOIN):
  SELECT *
  FROM EMPLOYEES_TABLE
  RIGHT JOIN DEPARTMENTS_TABLE ON
  EMPLOYEES_TABLE.DEPT_ID=
  DEPARTMENTS_TABLE.DEPT_ID;
  
  FULL_JOIN(FULL_OUTER_JOIN):
 SELECT *
  FROM EMPLOYEES_TABLE
  LEFT JOIN DEPARTMENTS_TABLE ON
  EMPLOYEES_TABLE.DEPT_ID=
  DEPARTMENTS_TABLE.DEPT_ID
  UNION
  SELECT *
  FROM EMPLOYEES_TABLE
  RIGHT JOIN DEPARTMENTS_TABLE ON
  EMPLOYEES_TABLE.DEPT_ID=
  DEPARTMENTS_TABLE.DEPT_ID;
  
  CROSS_JOIN(CARESIAN_JOIN):
  SELECT *FROM EMPLOYEES_TABLE
  CROSS JOIN 
  DEPARTMENTS_TABLE;
  
 NATURAL_JOIN:
 SELECT *FROM EMPLOYEES_TABLE
 NATURAL JOIN 
 DEPARTMENTS_TABLE;
  
  SELF_JOIN:
  SELECT*FROM EMPLOYEES_TABLE AS EMP_TB,EMPLOYEES_TABLE AS EMPL_TBL
  WHERE EMP_TB.NAME=EMPL_TBL.NAME
  AND EMP_TB.DEPT_ID!=EMPL_TBL.DEPT_ID;
  
                                          ----- THE END -----
  

  
  
  